Python Virtual Environments:

********* More Notes on Python Virtual Environments ********** 

Multiple paths can be given to venv, in which case an identical virtual environment will be created, according to the given options, at each provided path.
 
Once a virtual environment has been created, it can be “activated” using a script in the virtual environment’s binary directory. 

The invocation of the script is platform-specific (<venv> must be replaced by the path of the directory containing the virtual environment):
 


Platform  *****************************      Shell  ************************    Command to activate virtual environment
 

Posix                                        bash/zsh                                $ source <venv>/bin/activate
 
                                             fish                                    $ . <venv>/bin/activate.fish
 
                                             csh/tcsh                                $ source <venv>/bin/activate.csh

*************************************************************************************************************************** 

Windows                                      cmd.exe                                 C:\> <venv>\Scripts\activate.bat


                                             PowerShell                              PS C:\> <venv>\Scripts\Activate.ps1


*************************************************************************************************************************** 
 
You don’t specifically need to activate an environment; activation just prepends the virtual environment’s binary directory to your path, so that “python”
invokes the virtual environment’s Python interpreter and you can run installed scripts without having to use their full path. 

However, all scripts installed in a virtual environment should be runnable without activating it, and run with the virtual environment’s Python 
automatically.
 
You can deactivate a virtual environment by typing “deactivate” in your shell. 
The exact mechanism is platform-specific: for example, the Bash activation script defines a “deactivate” function, whereas on Windows there are separate 
scripts called deactivate.bat and Deactivate.ps1 which are installed when the virtual environment is created.
